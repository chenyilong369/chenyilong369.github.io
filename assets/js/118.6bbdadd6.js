(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{476:function(t,s,a){"use strict";a.r(s);var e=a(41),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字节面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节面试"}},[t._v("#")]),t._v(" 字节面试")]),t._v(" "),a("h2",{attrs:{id:"_2021-03-10-字节一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-03-10-字节一面"}},[t._v("#")]),t._v(" 2021-03-10 字节一面")]),t._v(" "),a("h3",{attrs:{id:"盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),a("h4",{attrs:{id:"_1-什么是盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是盒模型"}},[t._v("#")]),t._v(" 1. 什么是盒模型")]),t._v(" "),a("p",[a("strong",[t._v("盒模型")]),t._v("由以下属性组成，由外到内用公式表示就是："),a("strong",[t._v("box = margin + border + padding + content")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("margin")]),t._v("：边距，外部透明区域，负责隔离相邻盒子")]),t._v(" "),a("li",[a("strong",[t._v("border")]),t._v("：边框，内部着色区域，负责隔离边距和填充，包含"),a("code",[t._v("width")]),t._v("、"),a("code",[t._v("style")]),t._v("、"),a("code",[t._v("color")]),t._v("三个扩展属性")]),t._v(" "),a("li",[a("strong",[t._v("padding")]),t._v("：填充，内部着色区域，负责扩展盒子内部尺寸")]),t._v(" "),a("li",[a("strong",[t._v("content")]),t._v("：内容，以"),a("code",[t._v("文本")]),t._v("或"),a("code",[t._v("节点")]),t._v("存在的占用位置")])]),t._v(" "),a("h4",{attrs:{id:"_2-有什么盒模型-他们有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-有什么盒模型-他们有什么区别"}},[t._v("#")]),t._v(" 2. 有什么盒模型，他们有什么区别")]),t._v(" "),a("p",[t._v("CSS3里提供一个属性用于声明盒模型的类型，它就是"),a("code",[t._v("box-sizing")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("content-box")]),t._v("：标准盒模型("),a("code",[t._v("默认")]),t._v(")")]),t._v(" "),a("li",[a("strong",[t._v("border-box")]),t._v("：怪异盒模型")])]),t._v(" "),a("p",[t._v("他们的区别在于节点的宽高上：")]),t._v(" "),a("ul",[a("li",[t._v("标准盒模型："),a("code",[t._v("width = width")])]),t._v(" "),a("li",[t._v("怪异盒模型："),a("code",[t._v("width = padding +border +width")])])]),t._v(" "),a("h3",{attrs:{id:"请画出一个顶部高度为-200-px-其余空间自适应布局的两行布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请画出一个顶部高度为-200-px-其余空间自适应布局的两行布局"}},[t._v("#")]),t._v(" 请画出一个顶部高度为 200 px，其余空间自适应布局的两行布局")]),t._v(" "),a("ul",[a("li",[t._v("弹性布局(flex)")]),t._v(" "),a("li",[t._v("margin")])]),t._v(" "),a("h3",{attrs:{id:"与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与"}},[t._v("#")]),t._v(" == 与 ===")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("==")]),t._v("就是在比对时允许隐式转换")]),t._v(" "),a("li",[a("code",[t._v("===")]),t._v("就是在比对时不允许隐式转换")])]),t._v(" "),a("h3",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" promise")]),t._v(" "),a("h4",{attrs:{id:"_1-说说你怎么了解-promise-的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-说说你怎么了解-promise-的"}},[t._v("#")]),t._v(" 1. 说说你怎么了解 Promise 的")]),t._v(" "),a("p",[t._v("依照 Promise/A+ 的定义，Promise 有四种状态：")]),t._v(" "),a("p",[t._v("pending: 初始状态, 非 fulfilled 或 rejected.")]),t._v(" "),a("p",[t._v("fulfilled: 成功的操作.")]),t._v(" "),a("p",[t._v("rejected: 失败的操作.")]),t._v(" "),a("p",[t._v("settled: Promise已被fulfilled或rejected，且不是pending")]),t._v(" "),a("p",[t._v("另外， fulfilled与 rejected一起合称 settled")]),t._v(" "),a("p",[t._v("Promise 对象用来进行延迟(deferred) 和异步(asynchronous) 计算")]),t._v(" "),a("p",[t._v("Promise 实例拥有 then 方法（具有 then 方法的对象，通常被称为thenable）。它的使用方法如下：\n"),a("code",[t._v("promise.then(onFulfilled, onRejected)")])]),t._v(" "),a("p",[t._v("接收两个函数作为参数，一个在 fulfilled 的时候被调用，一个在rejected的时候被调用，接收参数就是 future，onFulfilled 对应resolve, onRejected对应 reject")]),t._v(" "),a("h4",{attrs:{id:"_2-promise-all-与-promise-race"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-promise-all-与-promise-race"}},[t._v("#")]),t._v(" 2. Promise.all 与 Promise.race")]),t._v(" "),a("p",[t._v("Promise.all可以将多个Promise实例包装成一个新的Promise实例。同时，成功和失败的返回值是不同的，成功的时候返回的是一个结果数组，而失败的时候则返回最先被reject失败状态的值。")]),t._v(" "),a("p",[t._v("顾名思义，Promse.race就是赛跑的意思，意思就是说，Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。")]),t._v(" "),a("h4",{attrs:{id:"_3-手写-promise-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-手写-promise-all"}},[t._v("#")]),t._v(" 3. 手写 Promise.all")]),t._v(" "),a("h5",{attrs:{id:"总结-promise-all-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-promise-all-的特点"}},[t._v("#")]),t._v(" 总结 promise.all 的特点")]),t._v(" "),a("p",[t._v("1、接收一个 "),a("code",[t._v("Promise")]),t._v(" 实例的数组或具有 "),a("code",[t._v("Iterator")]),t._v(" 接口的对象，")]),t._v(" "),a("p",[t._v("2、如果元素不是 "),a("code",[t._v("Promise")]),t._v(" 对象，则使用 "),a("code",[t._v("Promise.resolve")]),t._v(" 转成 "),a("code",[t._v("Promise")]),t._v(" 对象")]),t._v(" "),a("p",[t._v("3、如果全部成功，状态变为 "),a("code",[t._v("resolved")]),t._v("，返回值将组成一个数组传给回调")]),t._v(" "),a("p",[t._v("4、只要有一个失败，状态就变为 "),a("code",[t._v("rejected")]),t._v("，返回值将直接传递给回调")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("promiseAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("promises")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arguments must be an array'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resolvedCounter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promiseNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resolvedValues "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promiseNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" promiseNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    resolvedCounter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n                    resolvedValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolvedCounter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" promiseNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolvedValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("h4",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("动态创建 script 标签，然后通过 src 发送跨域请求，在发送请求之前必须声明一个 callback 函数，与参数中的函数名字一致。")])]),t._v(" "),a("li",[a("p",[t._v("后端获取前端声明的执行函数 callback，以调用执行函数的方式传递给前端。")])])]),t._v(" "),a("h3",{attrs:{id:"react-生命周期有哪些-请举出几个例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-生命周期有哪些-请举出几个例子"}},[t._v("#")]),t._v(" React 生命周期有哪些，请举出几个例子")]),t._v(" "),a("ol",[a("li",[t._v("挂载卸载过程")])]),t._v(" "),a("ul",[a("li",[t._v("constructor()")]),t._v(" "),a("li",[t._v("componentWillMount()")]),t._v(" "),a("li",[t._v("componentDidMount()")]),t._v(" "),a("li",[t._v("componentWillUnmount ()")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("更新过程")])]),t._v(" "),a("ul",[a("li",[t._v("componentWillReceiveProps (nextProps)")]),t._v(" "),a("li",[t._v("shouldComponentUpdate(nextProps,nextState)")]),t._v(" "),a("li",[t._v("componentWillUpdate (nextProps,nextState)")]),t._v(" "),a("li",[t._v("componentDidUpdate(prevProps,prevState)")]),t._v(" "),a("li",[t._v("render()")])]),t._v(" "),a("h4",{attrs:{id:"componentdidmount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount"}},[t._v("#")]),t._v(" componentDidMount()")]),t._v(" "),a("p",[t._v("当组件渲染完毕后才执行的生命周期方法。经常用于组件数据的加载。")]),t._v(" "),a("h3",{attrs:{id:"react-router中-hash-和-history-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-router中-hash-和-history-的区别"}},[t._v("#")]),t._v(" React-router中 hash 和 history 的区别")]),t._v(" "),a("p",[t._v("使用hashHistory时，因为有 # 的存在，浏览器不会发送request,react-router 自己根据 url 去 render 相应的模块。")]),t._v(" "),a("p",[t._v("使用browserHistory时，从 / 到 /user/liuna, 浏览器会向server发送request，所以server要做特殊请求，比如用的 express 的话，你需要 handle 所有的路由 "),a("code",[t._v("app.get('*', (req, res) => { ... })")]),t._v("，使用了 nginx 的话，nginx也要做相应的配置。")]),t._v(" "),a("h2",{attrs:{id:"_2021-03-21-字节四面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-03-21-字节四面"}},[t._v("#")]),t._v(" 2021-03-21 字节四面")]),t._v(" "),a("h3",{attrs:{id:"说说你的项目-这里讨论我项目讨论了15分钟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说你的项目-这里讨论我项目讨论了15分钟"}},[t._v("#")]),t._v(" 说说你的项目（这里讨论我项目讨论了15分钟）")]),t._v(" "),a("h3",{attrs:{id:"ajax-超时重传-3次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-超时重传-3次"}},[t._v("#")]),t._v(" Ajax 超时重传（3次）")]),t._v(" "),a("p",[t._v("这个目前没有找到解决办法")]),t._v(" "),a("h3",{attrs:{id:"url-hash的底层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-hash的底层原理"}},[t._v("#")]),t._v(" url hash的底层原理")]),t._v(" "),a("ol",[a("li",[t._v("hash 路由：监听 url 中 hash 的变化，然后渲染不同的内容，这种路由不向服务器发送请求，不需要服务端的支持；")]),t._v(" "),a("li",[t._v("history 路由：监听 url 中的路径变化，需要客户端和服务端共同的支持；")])]),t._v(" "),a("blockquote",[a("p",[t._v("主要实现以下几个简单的功能：")]),t._v(" "),a("ol",[a("li",[t._v("监听路由的变化，当路由发生变化时，可以作出动作；")]),t._v(" "),a("li",[t._v("可以前进或者后退；")]),t._v(" "),a("li",[t._v("可以配置路由；")])])]),t._v(" "),a("h4",{attrs:{id:"hash路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash路由"}},[t._v("#")]),t._v(" hash路由")]),t._v(" "),a("p",[t._v("当页面中的 hash 发生变化时，会触发"),a("code",[t._v("hashchange")]),t._v("事件，因此我们可以监听这个事件，来判断路由是否发生了变化。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashchange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oldURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上一个URL")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的URL")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);